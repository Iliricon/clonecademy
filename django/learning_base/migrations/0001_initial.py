# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-15 17:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_order', models.CharField(help_text='The ordering of the modules in array format. It must to start with [ and end with ]', max_length=144, null=True, verbose_name='Question ordering array')),
                ('name', models.CharField(help_text='A short concise name for the course', max_length=144, unique=True, verbose_name='Course name')),
                ('course_difficulty', models.CharField(choices=[('EA', 'Easy (high school students)'), ('MO', 'Moderate (college entry)'), ('DI', 'Difficult (college students'), ('EX', 'Expert (college graduates)')], default='MO', max_length=2, verbose_name='Course difficulty')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Is the course visible')),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category (e.g. biochemistry)', max_length=144)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A short concise name for the module', max_length=144, verbose_name='Module name')),
                ('learning_text', models.TextField(help_text='The learning Text for the module', verbose_name='Learning text')),
                ('question_order', models.CharField(help_text='the ordering of the questions in array format. It must to start with [ and end with ]', max_length=144, null=True, verbose_name='Question ordering array')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The answers text', verbose_name='Answer text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='is the answer correct?')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_title', models.TextField(help_text='A short and concise name for the ', verbose_name='Question title')),
                ('question_body', models.TextField(help_text='This field can contain markdown syntax', verbose_name='Question text')),
                ('feedback', models.TextField(help_text='The feedback for the user after sucessfull answer', null=True, verbose_name='feedback')),
                ('feedback_is_set', models.BooleanField(default=False, help_text='If this is true the user will get back the custom feedback', verbose_name='feedback is set')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='learning_base.Question')),
                ('answers', models.ManyToManyField(to='learning_base.MultipleChoiceAnswer')),
            ],
            options={
                'abstract': False,
            },
            bases=('learning_base.question',),
        ),
        migrations.AddField(
            model_name='question',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_learning_base.question_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='module',
            name='questions',
            field=models.ManyToManyField(null=True, to='learning_base.Question'),
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ManyToManyField(blank=True, null=True, to='learning_base.CourseCategory'),
        ),
        migrations.AddField(
            model_name='course',
            name='module',
            field=models.ManyToManyField(null=True, to='learning_base.Module'),
        ),
    ]
